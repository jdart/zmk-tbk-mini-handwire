
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define SYM_L 1
#define NUM_L 2

&lt { quick_tap_ms = <100>; };

/ {
        behaviors {
                combos {        
                        compatible = "zmk,combos";        
                        c_lalt {            
                                timeout-ms = <50>;            
                                key-positions = <20 21>;            
                                bindings = <&sk LALT>;        
                        };                         
                        c_lgui {            
                                timeout-ms = <50>;            
                                key-positions = <21 22>;            
                                bindings = <&sk LGUI>;        
                        };                 
                        c_laltgui {            
                                timeout-ms = <50>;            
                                key-positions = <20 21 22>;            
                                bindings = <&sk LA(LGUI)>;        
                        }; 
                        c_lctrl {            
                                timeout-ms = <50>;            
                                key-positions = <22 23>;            
                                bindings = <&sk LCTRL>;        
                        };
                        c_ralt {            
                                timeout-ms = <50>;            
                                key-positions = <28 29>;            
                                bindings = <&sk LALT>;        
                        };                         
                        c_rgui {            
                                timeout-ms = <50>;            
                                key-positions = <27 28>;            
                                bindings = <&sk LGUI>;        
                        };                 
                        c_raltgui {            
                                timeout-ms = <50>;            
                                key-positions = <27 28 29>;            
                                bindings = <&sk LA(LGUI)>;        
                        }; 
                        c_rctrl {            
                                timeout-ms = <50>;            
                                key-positions = <26 27>;            
                                bindings = <&sk LCTRL>;        
                        };
                        c_lmgui {            
                                timeout-ms = <50>;            
                                key-positions = <11 12>;            
                                bindings = <&kp LGUI>;        
                        };                          
                        c_lmsft {            
                                timeout-ms = <50>;            
                                key-positions = <11 13>;            
                                bindings = <&kp LSFT>;        
                        }; 
                        c_lmguisft {            
                                timeout-ms = <50>;            
                                key-positions = <11 12 13>;            
                                bindings = <&kp LS(LGUI)>;        
                        };
                        c_esc {
                                timeout-ms = <50>;            
                                key-positions = <11 17>;            
                                bindings = <&kp ESCAPE>;    
                        };
                        c_rmgui {            
                                timeout-ms = <50>;            
                                key-positions = <17 18>;            
                                bindings = <&kp LGUI>;        
                        };                          
                        c_rmsft {            
                                timeout-ms = <50>;            
                                key-positions = <16 18>;            
                                bindings = <&kp LSFT>;        
                        }; 
                        c_rmguisft {            
                                timeout-ms = <50>;            
                                key-positions = <16 17 18>;            
                                bindings = <&kp LS(LGUI)>;        
                        };
                };
        };

        keymap {
                compatible = "zmk,keymap";
                default_layer {
                        bindings = <
    &kp Q       &kp W        &kp E          &kp R        &kp T          &kp Y    &kp U         &kp I           &kp O       &kp P      
    &kp A       &kp S        &kp D          &kp F        &kp G          &kp H    &kp J         &kp K           &kp L       &kp SEMI
    &kp Z       &kp X        &kp C          &kp V        &kp B          &kp N    &kp M         &kp COMMA       &kp DOT     &kp FSLH   
                             &lt NUM_L BKSP &lt SYM_L TAB      &trans         &trans   &lt SYM_L RET  &lt NUM_L SPACE
                        >;
                };

                symbol_layer {
                        bindings = <
    &kp EXCL   &kp AT     &kp LBRC  &kp RBRC  &trans            &trans    &kp UNDER  &kp BSLH   &kp SQT     &kp DQT
    &kp ESC    &kp DLLR   &kp LPAR  &kp RPAR  &kp GRAVE         &kp PLUS  &kp MINUS  &kp FSLH   &kp STAR    &kp DEL
    &trans     &kp CARET  &kp LBKT  &kp RBKT  &kp TILDE         &kp AMPS  &kp PIPE   &kp EQUAL  &kp HASH    &kp PRCNT
                          &kp EQUAL &trans    &trans            &trans    &trans     &kp EQUAL
                        >;
                };

                number_layer {
                        bindings = <
    &trans      &kp N7      &kp N8       &kp N9      &trans             &trans    &kp LA(LG(LARW))    &kp LA(LG(RARW))    &trans      &trans     
    &trans      &kp N4      &kp N5       &kp N6      &trans             &kp LARW  &kp DARW  &kp UARW  &kp RARW    &trans 
    &kp N0      &kp N1      &kp N2       &kp N3      &trans             &trans    &kp LG(LBKT)   &kp LG(RBKT) &trans &reset
                            &kp EQUAL    &trans      &bt BT_CLR         &trans    &trans    &kp EQUAL
                        >;
                };
        };
};
